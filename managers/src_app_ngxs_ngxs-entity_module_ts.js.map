{"version":3,"file":"src_app_ngxs_ngxs-entity_module_ts.js","mappings":"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","sources":["./src/app/ngxs/manager-wrapper.service.ts","./src/app/ngxs/ngxs-entity.actions.ts","./src/app/ngxs/ngxs-entity.module.ts","./src/app/ngxs/ngxs-entity.state.ts","./src/app/ngxs/ngxs.component.ts","./src/app/ngxs/ngxs.component.html"],"sourcesContent":["\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Store } from \"@ngxs/store\";\r\nimport { Subject, tap } from \"rxjs\";\r\nimport { map, skip } from \"rxjs/operators\";\r\nimport { LoggerService } from \"../shared/services/logger.service\";\r\nimport { MeasureService } from \"../shared/services/measure.service\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class WrapperService {\r\n    store$ = new Subject();\r\n    measures: number[] = [];\r\n\r\n    constructor(\r\n        private store: Store,\r\n        private measureService: MeasureService,\r\n        private loggerService: LoggerService\r\n    ) {\r\n        this.store.select(state=> state.entities.entities).pipe(skip(1)).subscribe((z) => {\r\n            const start = this.measureService.marks[this.measureService.marks.length - 1]?.start;\r\n            const end = this.measureService.end();\r\n            this.measures.push(end);\r\n            this.loggerService.log(start, this.measures.length, end);\r\n            this.store$.next(z);\r\n        }\r\n        )\r\n    }\r\n\r\n    dispatch(action: any) {\r\n        this.measureService.start();\r\n        this.store.dispatch(action);\r\n    }\r\n}","import { Entity } from \"../shared/models/Entities\";\n\nexport class addEntity {\n  static readonly type = '[Entity] Add Entity';\n  constructor(public payload: Entity) {}\n}\n\nexport class addedEntity {\n  static readonly type = '[Entity] Added Entity success';\n  constructor(public payload: Entity) {}\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { NgxsModule } from '@ngxs/store';\nimport { RouterModule } from '@angular/router';\nimport { NgXsComponent } from './ngxs.component';\nimport { NgXsEntitiesState } from './ngxs-entity.state';\nimport { SharedModule } from '../shared/shared.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild([{\n      path: '',\n      component: NgXsComponent\n    }]),\n    SharedModule,\n    NgxsModule.forFeature([NgXsEntitiesState]),\n  ],\n  declarations: [NgXsComponent]\n})\nexport class NgXsModule { }","import { Injectable } from '@angular/core';\nimport { Action, State, StateContext } from '@ngxs/store';\nimport { of, delay, tap } from 'rxjs';\n\nimport { Entity, EntityState } from '../shared/models/Entities';\nimport { addedEntity, addEntity } from './ngxs-entity.actions';\n\n\n@State<EntityState>({\n  name: 'entities',\n  defaults: { entities: [] }\n})\n\n@Injectable()\nexport class NgXsEntitiesState {\n  @Action(addEntity)\n  addEntity(ctx: StateContext<EntityState>, { payload }: addedEntity) {\n    return of(payload).pipe(delay(1), tap(entity => ctx.dispatch(new addedEntity(entity))))\n  }\n\n  @Action(addedEntity)\n  addedEntity(ctx: StateContext<EntityState>, { payload }: addedEntity) {\n    ctx.setState((state) => ({\n      entities: [...state.entities, payload]\n    }))\n  }\n}","import { state } from '@angular/animations';\nimport { ChangeDetectionStrategy } from '@angular/core';\nimport { Component } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Select, Store } from '@ngxs/store';\nimport { Observable } from 'rxjs';\nimport { ManagerComponent } from '../manager-base.component';\nimport { ChartPoint } from '../shared/components/scatter-chart/scatter-chart.component';\nimport { Entity } from '../shared/models/Entities';\nimport { LocalStorageService } from '../shared/services/local-storage.service';\nimport { LoggerService } from '../shared/services/logger.service';\nimport { MeasureService } from '../shared/services/measure.service';\nimport { createEntity } from '../shared/utils/Entities';\nimport { WrapperService } from './manager-wrapper.service';\n\nimport { addEntity } from './ngxs-entity.actions';\nimport { NgXsEntitiesState } from './ngxs-entity.state';\n\n@Component({\n  selector: 'app-entity',\n  templateUrl: './ngxs.component.html',\n  providers: [WrapperService],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NgXsComponent extends ManagerComponent {\n  @Select(state=> state.entities.entities) entities$: Observable<Entity[]>;\n  public name = 'ngxs';\n\n  constructor(route: ActivatedRoute, private store: Store, measureService: MeasureService, private wrapperManager: WrapperService, loggerService: LoggerService,  localStorageService: LocalStorageService) {\n    super(route, measureService, loggerService, localStorageService);\n    this.wrapperManager.store$.subscribe((z: Entity) => {\n      if (this.wrapperManager.measures.length < this.entitiesCount) {\n        this.wrapperManager.dispatch(new addEntity(createEntity(z)));\n      } else {\n        this.chartData = this.buildChartData();\n        this.saveResult();\n      }\n    })\n  }\n\n  public ngOnInit(): void {\n    this.wrapperManager.dispatch(new addEntity(createEntity(undefined)));\n  }\n}\n","<ng-container *ngIf=\"entities$ | async; let entities\">\n  <app-progress-bar\n    [value]=\"entities.length\"\n    label=\"entities\"\n    [max]=\"entitiesCount\"\n  ></app-progress-bar>\n\n  <app-scatter-chart\n    [data]=\"chartData\"\n    color=\"green\"\n    label=\"NgXs\"\n    *ngIf=\"chartData?.length\"\n  ></app-scatter-chart>\n</ng-container>\n"],"names":["Select","ManagerComponent","createEntity","WrapperService","addEntity","i0","ctx_r0","NgXsComponent","constructor","route","store","measureService","wrapperManager","loggerService","localStorageService","store$","subscribe","z","measures","length","entitiesCount","dispatch","chartData","buildChartData","saveResult","ngOnInit","undefined","selectors","features","decls","vars","consts","template","__decorate","state","entities"],"sourceRoot":"webpack:///"}